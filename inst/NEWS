CHANGES IN VERSION 1.7.5:
	- MAJOR/BREAKING UPDATE: quantifyCTSSs is now a generic with new defaults. When importing BigWig  files, tiles are no specifed as a single number of tiles across the genome, rather than size in basepairs. The new default is to import the entire genome as a single tile. This should be the fastest option for small datasets, for larger datasets is usually faster to use multiple tiles.
	- quantifyCTSSs now accepts bedGraph files. Unlike BigWig import, this works on Windows.
	- New convert*-family of functions which can convert CTSSs between BigWig/BED/bedGraph formats.
	- New checkCTSSs for checking whether CTSSs-files are correctly formatted, and if not, will hopefully output some useful diagnostics.
	- New quickGenes wrapper function for collapsing cluster-level data to gene-level data. Check the vignette for example of usage.
	- New shapeMean function.
	- Many internal functions are now exposed as utils*-function. This should make it easier for power users and/or developers to modify and extend CAGEfightR.
	- Some internal changes to quantifyCTSSs and quantifyClusters for slightly better performance.
	- Fixed a small bug where assignGeneID counted NA as a gene when outputting a message. Note,  this never affected the actual output of the function, just the message produced.

CHANGES IN VERSION 1.5.3:
	- Added citation to BMC Bioinformatics paper.

CHANGES IN VERSION 1.5:
	- Added new functions for spatial analysis of clusters: findLinks finds nearby pairs of clusters (for example TSSs and enhancers) and calculates the correlation of expression between them. findStretches find stretches along the genome where clusters are within a certain distance of eachother (for example groups of enhancer forming a super enhancer) and calculates the average pairwise correlation between members.
	- Changed the way clustering works: CAGEfightR uses coverage() to calculate genome-wide signals and now rounds the resulting signal to a certain number of digits (this can be modified via the CAGEfightR.round option), to prevent small positive or negative values due to floating point errors. This makes clustering more stable meaning the tuneTagClustering function is now deprecated. This should also increase the speed of most functions.
	- CAGEfightR now uses GPos instead of GRanges for storing CTSSs, this should result in improved memory performance.
	- Several changes to clusterBidirectionality: Balance is now calculated using the midpoint as well (preventing some rare cases where the midpoint could mask a single highly expressed CTSS), the pooled CTSS signal is now prefiltered for bidirectionality to increase speed and custom balance function can be provided (Bhattacharyya coefficient and Andersson's D are included).
	- Added new check-functions to make it easier to check if objects are formatted correctly

CHANGES IN VERSION 0.99:
	- Submitted CAGEfightR to Bioconductor
